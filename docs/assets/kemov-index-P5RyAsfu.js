import{g as m}from"./kemov-axios--MCeKlca.js";function H(t){return t==null?"":t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}const B="https://nanase.cc/asset/kemov/channels.json",G="https://s3.ap-northeast-1.amazonaws.com/nanase.asset/kemov/stats.json",D="https://s3.ap-northeast-1.amazonaws.com/nanase.asset/kemov/stats/video/";function M(t){return`${D}${t}.json`}const I=new Set(["ENOTFOUND","ENETUNREACH","UNABLE_TO_GET_ISSUER_CERT","UNABLE_TO_GET_CRL","UNABLE_TO_DECRYPT_CERT_SIGNATURE","UNABLE_TO_DECRYPT_CRL_SIGNATURE","UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","CERT_SIGNATURE_FAILURE","CRL_SIGNATURE_FAILURE","CERT_NOT_YET_VALID","CERT_HAS_EXPIRED","CRL_NOT_YET_VALID","CRL_HAS_EXPIRED","ERROR_IN_CERT_NOT_BEFORE_FIELD","ERROR_IN_CERT_NOT_AFTER_FIELD","ERROR_IN_CRL_LAST_UPDATE_FIELD","ERROR_IN_CRL_NEXT_UPDATE_FIELD","OUT_OF_MEM","DEPTH_ZERO_SELF_SIGNED_CERT","SELF_SIGNED_CERT_IN_CHAIN","UNABLE_TO_GET_ISSUER_CERT_LOCALLY","UNABLE_TO_VERIFY_LEAF_SIGNATURE","CERT_CHAIN_TOO_LONG","CERT_REVOKED","INVALID_CA","PATH_LENGTH_EXCEEDED","INVALID_PURPOSE","CERT_UNTRUSTED","CERT_REJECTED","HOSTNAME_MISMATCH"]);var L=t=>!I.has(t&&t.code);const p=m(L),c="axios-retry";function l(t){const e=["ERR_CANCELED","ECONNABORTED"];return t.response||!t.code||e.includes(t.code)?!1:p(t)}const C=["get","head","options"],y=C.concat(["put","delete"]);function R(t){return t.code!=="ECONNABORTED"&&(!t.response||t.response.status>=500&&t.response.status<=599)}function S(t){var e;return(e=t.config)!=null&&e.method?R(t)&&C.indexOf(t.config.method)!==-1:!1}function N(t){var e;return(e=t.config)!=null&&e.method?R(t)&&y.indexOf(t.config.method)!==-1:!1}function d(t){return l(t)||N(t)}function U(){return 0}function h(t=0,e=void 0,n=100){const E=2**t*n,s=E*.2*Math.random();return E+s}const P={retries:3,retryCondition:d,retryDelay:U,shouldResetTimeout:!1,onRetry:()=>{}};function w(t,e){return{...P,...e,...t[c]}}function T(t,e){const n=w(t,e||{});return n.retryCount=n.retryCount||0,n.lastRequestTime=n.lastRequestTime||Date.now(),t[c]=n,n}function F(t,e){t.defaults.agent===e.agent&&delete e.agent,t.defaults.httpAgent===e.httpAgent&&delete e.httpAgent,t.defaults.httpsAgent===e.httpsAgent&&delete e.httpsAgent}async function q(t,e){const{retries:n,retryCondition:E}=t,s=(t.retryCount||0)<n&&E(e);if(typeof s=="object")try{return await s!==!1}catch{return!1}return s}const _=(t,e)=>{const n=t.interceptors.request.use(s=>(T(s,e),s)),E=t.interceptors.response.use(null,async s=>{const{config:r}=s;if(!r)return Promise.reject(s);const o=T(r,e);if(await q(o,s)){o.retryCount+=1;const{retryDelay:f,shouldResetTimeout:A,onRetry:O}=o,a=f(o.retryCount,s);if(F(t,r),!A&&r.timeout&&o.lastRequestTime){const u=Date.now()-o.lastRequestTime,i=r.timeout-u-a;if(i<=0)return Promise.reject(s);r.timeout=i}return r.transformRequest=[u=>u],await O(o.retryCount,s,r),new Promise(u=>{setTimeout(()=>u(t(r)),a)})}return Promise.reject(s)});return{requestInterceptorId:n,responseInterceptorId:E}};_.isNetworkError=l;_.isSafeRequestError=S;_.isIdempotentRequestError=N;_.isNetworkOrIdempotentRequestError=d;_.exponentialDelay=h;_.isRetryableError=R;export{_ as a,B as c,G as s,M as v,H as w};
